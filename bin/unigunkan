#!/usr/bin/env ruby
# encoding: UTF-8

require 'optparse'
opt = OptionParser.new

OPTS = {}
opt.on('-y') {|v| OPTS[:y] = v }
opt.on('--disable-retina-4inch-support') {|v| OPTS[:disable_retina_4inch_support] = v}
opt.parse!(ARGV)

input = ARGV[0]
backup_confirmed = OPTS[:y]
disable_retina_4inch_support = OPTS[:disable_retina_4inch_support]

puts "Hello Uni. #{ARGV[0]}"

input = "#{input}/project.pbxproj" if !File.exists?(input) || File::ftype(input) == "directory"

if !File.exists?(input)
  STDERR.puts "Xcode project file not found in #{ARGV[0]}."
  exit
end

if backup_confirmed != true
  STDERR.puts "Caution: Project file might be broken using this script."
  STDERR.puts "This script makes a copy of original project.pbxproj as project.pbxproj.backup{date}."
  STDERR.puts "If the project was broken, delete project.pbxproj and restore from a backup."
  STDERR.puts " "
  STDERR.puts "OK? Then append '-y' and run again. `unigunkan #{ARGV.join(' ')} -y`"
  exit
end

# create a backup
STDOUT.puts "Creating a backup of project.pbxproj..."
backup_filepath = input + ".backup" + Time.now.strftime("%Y%m%d%H%M%S")
FileUtils.cp(input, backup_filepath)
STDOUT.puts "A backup created -> #{backup_filepath}"

# read the original
src = ""
f = open(input)
src = f.read
f.close

# Disable iphone5 support
# (Remove lines which include 'Default-568h@2x.png'.)
if disable_retina_4inch_support
  STDOUT.puts "Disabling Retina 4inch support..."
  dst = src.split("\n")
  src = ""
  lines_removed = 0
  for line in dst
    if line.index("Default-568h@2x.png") == nil
      src += "#{line}\n"
    else
      lines_removed += 1
    end
  end
  if lines_removed > 0
    STDOUT.puts "#{lines_removed} lines removed."
  else
    STDOUT.puts "Default-568h@2x.png not found in this project. No lines removed."
  end
end

# delete the original
FileUtils.rm input

# write to project.pbxproj
open(input, "w") {|f|
  f.puts src
}